{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Scroll.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","id","className","href","title","React","Component","Home","Scroll","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uOAkDeA,E,iLA9CX,OACE,yBAAKC,GAAG,WAAWC,UAAU,wCAC3B,uBAAGA,UAAU,aAAaC,KAAK,YAAYC,MAAM,mBAAjD,mBAGA,uBAAGF,UAAU,aAAaC,KAAK,IAAIC,MAAM,mBAAzC,mBAIA,wBAAIH,GAAG,MAAMC,UAAU,OACrB,wBAAIA,UAAU,WACZ,uBAAGA,UAAU,eAAeC,KAAK,SAAjC,SAIF,4BACE,uBAAGD,UAAU,eAAeC,KAAK,UAAjC,UAIF,4BACE,uBAAGD,UAAU,eAAeC,KAAK,WAAjC,WAIF,4BACE,uBAAGD,UAAU,eAAeC,KAAK,cAAjC,UAIF,4BACE,uBAAGD,UAAU,eAAeC,KAAK,iBAAjC,iBAIF,4BACE,uBAAGD,UAAU,eAAeC,KAAK,YAAjC,kB,GAtCSE,IAAMC,WC6CZC,E,iLA3CX,OACE,yBAAKL,UAAU,cACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,uBAAd,4BACA,qCACQ,qDADR,gEAGE,mEAHF,gCAIe,IACb,uBAAGA,UAAU,eAAeC,KAAK,UAAjC,kBACkB,KANpB,iBAQiB,IACf,uBAAGD,UAAU,eAAeC,KAAK,UAAjC,YATF,KAcA,6BACA,wBAAID,UAAU,UACZ,4BACE,uBAAGC,KAAK,2CACN,uBAAGD,UAAU,qBAIjB,4BACE,uBAAGC,KAAK,wEACN,uBAAGD,UAAU,qBAGjB,4BACE,uBAAGC,KAAK,gDACN,uBAAGD,UAAU,6B,GAnCVG,IAAMC,WCYVE,E,iLAVX,OACE,uBAAGN,UAAU,cACX,uBAAGA,UAAU,eAAeC,KAAK,UAC/B,uBAAGD,UAAU,2B,GALFG,IAAMC,WCeZG,E,iLAVX,OACE,4BAAQR,GAAG,OAAOC,UAAU,cAC1B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANaG,IAAMC,W,MCOZI,MARf,WACE,OACE,yBAAKR,UAAU,OACb,kBAAC,EAAD,Q,iBCKcS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,cDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e71bece8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav id=\"nav-wrap\" className=\"navbar d-flex justify-content-center\">\r\n        <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n          Show navigation\r\n        </a>\r\n        <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\r\n          Hide navigation\r\n        </a>\r\n\r\n        <ul id=\"nav\" className=\"nav\">\r\n          <li className=\"current\">\r\n            <a className=\"smoothscroll\" href=\"#home\">\r\n              Home\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className=\"smoothscroll\" href=\"#about\">\r\n              About\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className=\"smoothscroll\" href=\"#resume\">\r\n              Resume\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className=\"smoothscroll\" href=\"#portfolio\">\r\n              Works\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className=\"smoothscroll\" href=\"#testimonials\">\r\n              Testimonials\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className=\"smoothscroll\" href=\"#contact\">\r\n              Contact\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row banner\">\r\n        <div className=\"banner-text\">\r\n          <h1 className=\"responsive-headline\">I'm Sebastian G. Leiton.</h1>\r\n          <h3>\r\n            I'm a <span>electronic engineer</span> in training with an emphasis\r\n            on controls and energy from the\r\n            <span> Pontificia Universidad Javeriana</span>. IoT and sports\r\n            lover. Let's{\" \"}\r\n            <a className=\"smoothscroll\" href=\"#about\">\r\n              start scrolling{\" \"}\r\n            </a>\r\n            and learn more{\" \"}\r\n            <a className=\"smoothscroll\" href=\"#about\">\r\n              about me\r\n            </a>\r\n            .\r\n          </h3>\r\n          <hr />\r\n          <ul className=\"social\">\r\n            <li>\r\n              <a href=\"https://www.facebook.com/sebas.g.leiton\">\r\n                <i className=\"fa fa-facebook\" />\r\n              </a>\r\n            </li>\r\n\r\n            <li>\r\n              <a href=\"https://www.linkedin.com/in/sebastián-garzón-leiton-aa76b91a4/\">\r\n                <i className=\"fa fa-linkedin\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://www.instagram.com/sleiton9/?hl=es-la\">\r\n                <i className=\"fa fa-instagram\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass Scroll extends React.Component {\r\n  render() {\r\n    return (\r\n      <p className=\"scrolldown\">\r\n        <a className=\"smoothscroll\" href=\"#about\">\r\n          <i className=\"icon-down-circle\" />\r\n        </a>\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scroll;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\nimport Scroll from \"./Scroll\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header id=\"home\" className=\"App-header\">\r\n        <Navbar />\r\n        <Home />\r\n        <Scroll />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"container\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}